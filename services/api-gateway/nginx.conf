events {
    worker_connections 1024;
}

http {
    # Définir l'origine autorisée
    map $http_origin $cors_origin {
        default "";
        "http://localhost:3000" $http_origin;
    }

    server {
        listen 8080;
        server_name localhost;

        root /usr/share/nginx/html;

        # Auth interne (pas de headers ici, c’est interne !)
        location /authenticate {
            if ($request_method = OPTIONS) {
                return 204;
            }

            internal;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;

            proxy_pass http://auth-service:3000/authenticate;
        }

        # ROUTES PUBLIQUES
        location /auth/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials "true";
                return 204;
            }

            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials "true" always;

            proxy_pass http://auth-service:3000/;
        }

        location /register {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials "true";
                return 204;
            }

            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials "true" always;

            proxy_pass http://users-service:3000/register;
        }

        # ROUTES PROTÉGÉES
        location /orders/ {
            auth_request /authenticate;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials "true";
                return 204;
            }

            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials "true" always;

            proxy_pass http://orders-service:3000/;
        }

        location /logs/ {
            auth_request /authenticate;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials "true";
                return 204;
            }

            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials "true" always;

            proxy_pass http://logs-service:3000/;
        }

        location /users/ {
            auth_request /authenticate;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials "true";
                return 204;
            }

            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials "true" always;

            proxy_pass http://users-service:3000/;
        }

        location /restaurants/ {
            auth_request /authenticate;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials "true";
                return 204;
            }

            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials "true" always;

            proxy_pass http://restaurants-service:3000/;
        }
    }
}
